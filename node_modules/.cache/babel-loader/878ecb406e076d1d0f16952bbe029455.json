{"ast":null,"code":"var _jsxFileName = \"/Users/lijiajia/Desktop/hooks/hooks/src/extra/customHooks.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n/**\n * 自定义hook\n */\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction sleep() {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve();\n    }, 200);\n  });\n} //请求后返回了一些数据，请求返回的数据是状态\n\n\nasync function getPerson() {\n  await sleep(200); //模拟接口请求，在这里停留200毫秒\n\n  return ['李君', '李佳佳', '杨坤']; //之后返回一个数组\n} //然后使用状态\n\n\nfunction usePerson() {\n  _s();\n\n  const [list, setList] = useState(null); //发送请求是个作用，也就是effect(因为没有办法体现在界面上，所以理解为一个作用)\n\n  async function request() {\n    const list = await getPerson();\n    console.log('lsit', list);\n    setList(list); //list 不要依赖现有的list????\n  }\n\n  useEffect(request, []);\n}\n\n_s(usePerson, \"9FQm/8UeCQ+PCXeKOabgriiFNvc=\");\n\nexport const CustomHooks = () => {\n  _s2();\n\n  const list = usePerson();\n  console.log('render', list);\n\n  if (list === null) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: list.map((name, i) => {\n      /*#__PURE__*/\n      _jsxDEV(\"li\", {\n        children: name\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 12\n  }, this);\n};\n\n_s2(CustomHooks, \"XQWjykiDMz7FfnrPrG3OgkBjEVE=\", false, function () {\n  return [usePerson];\n});\n\n_c = CustomHooks;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomHooks\");","map":{"version":3,"sources":["/Users/lijiajia/Desktop/hooks/hooks/src/extra/customHooks.js"],"names":["React","useState","useEffect","sleep","Promise","resolve","setTimeout","getPerson","usePerson","list","setList","request","console","log","CustomHooks","map","name","i"],"mappings":";;;;AAAA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAEA,SAASC,KAAT,GAAiB;AACb,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5BC,IAAAA,UAAU,CAAC,MAAM;AACbD,MAAAA,OAAO;AACV,KAFS,EAEP,GAFO,CAAV;AAGH,GAJM,CAAP;AAMH,C,CAED;;;AACA,eAAeE,SAAf,GAA2B;AACvB,QAAMJ,KAAK,CAAC,GAAD,CAAX,CADuB,CACN;;AACjB,SAAO,CAAC,IAAD,EAAO,KAAP,EAAc,IAAd,CAAP,CAFuB,CAEG;AAC7B,C,CAED;;;AACA,SAASK,SAAT,GAAqB;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC,CADiB,CAEjB;;AACA,iBAAeU,OAAf,GAAyB;AACrB,UAAMF,IAAI,GAAG,MAAMF,SAAS,EAA5B;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBJ,IAAnB;AACAC,IAAAA,OAAO,CAACD,IAAD,CAAP,CAHqB,CAGR;AAChB;;AACDP,EAAAA,SAAS,CAACS,OAAD,EAAU,EAAV,CAAT;AACH;;GATQH,S;;AAaT,OAAO,MAAMM,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAML,IAAI,GAAGD,SAAS,EAAtB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBJ,IAArB;;AACA,MAAIA,IAAI,KAAK,IAAb,EAAmB;AACf,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AACD,sBAAO;AAAA,cACCA,IAAI,CAACM,GAAL,CAAS,CAACC,IAAD,EAAOC,CAAP,KAAa;AAClB;AAAA;AAAA,kBAAaD;AAAb,SAASC,CAAT;AAAA;AAAA;AAAA;AAAA;AACH,KAFD;AADD;AAAA;AAAA;AAAA;AAAA,UAAP;AAKH,CAXM;;IAAMH,W;UACIN,S;;;KADJM,W","sourcesContent":["/**\n * 自定义hook\n */\n\nimport React, { useState, useEffect } from 'react'\n\nfunction sleep() {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve()\n        }, 200)\n    })\n\n}\n\n//请求后返回了一些数据，请求返回的数据是状态\nasync function getPerson() {\n    await sleep(200);//模拟接口请求，在这里停留200毫秒\n    return ['李君', '李佳佳', '杨坤']//之后返回一个数组\n}\n\n//然后使用状态\nfunction usePerson() {\n    const [list, setList] = useState(null);\n    //发送请求是个作用，也就是effect(因为没有办法体现在界面上，所以理解为一个作用)\n    async function request() {\n        const list = await getPerson()\n        console.log('lsit',list)\n        setList(list)//list 不要依赖现有的list????\n    }\n    useEffect(request, [])\n}\n\n\n\nexport const CustomHooks = () => {\n    const list = usePerson();\n    console.log('render',list)\n    if (list === null) {\n        return <div>loading...</div>\n    } \n    return <div>{\n            list.map((name, i) => {\n                <li key={i}>{name}</li>\n            })}</div>\n    \n}\n"]},"metadata":{},"sourceType":"module"}