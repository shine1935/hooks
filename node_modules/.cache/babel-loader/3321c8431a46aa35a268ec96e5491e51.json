{"ast":null,"code":"/**\n *  state返回内部变量_val的值\n *  setState将该内部变量设置为传参的值 \n * \n */\nfunction useState1(initialValue) {\n  var _val = initialValue; //_val是useState创建的本地变量\n\n  function state() {\n    return _val; //使用了由外层函数定义的_val\n  }\n\n  function setState(newVal) {\n    _val = newVal;\n  }\n\n  return [state, setState]; //将函数暴露给外部使用\n}\n\nvar [foo, setFoo] = useState(0); //数组结构\n\nconsole.log(foo()); //打印0 - initialValue（初始值）\n\nsetFoo(1); //在useState作用域内设置_val的值\n\nconsole.log(foo()); // 打印 1 - 虽然调用同一个方法，但返回新的 initialValue","map":{"version":3,"sources":["/Users/lijiajia/private2021/hooks/src/basic/useStateOrigin.js"],"names":["useState1","initialValue","_val","state","setState","newVal","foo","setFoo","useState","console","log"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA,SAASA,SAAT,CAAmBC,YAAnB,EAAgC;AAC5B,MAAIC,IAAI,GAAGD,YAAX,CAD4B,CACJ;;AACxB,WAASE,KAAT,GAAgB;AACZ,WAAOD,IAAP,CADY,CACC;AAChB;;AAED,WAASE,QAAT,CAAkBC,MAAlB,EAAyB;AACrBH,IAAAA,IAAI,GAACG,MAAL;AACH;;AAED,SAAO,CAACF,KAAD,EAAOC,QAAP,CAAP,CAV4B,CAUJ;AAC3B;;AAED,IAAI,CAACE,GAAD,EAAMC,MAAN,IAAgBC,QAAQ,CAAC,CAAD,CAA5B,C,CAAgC;;AAChCC,OAAO,CAACC,GAAR,CAAYJ,GAAG,EAAf,E,CAAkB;;AAElBC,MAAM,CAAC,CAAD,CAAN,C,CAAU;;AACVE,OAAO,CAACC,GAAR,CAAYJ,GAAG,EAAf,E,CAAmB","sourcesContent":["/**\n *  state返回内部变量_val的值\n *  setState将该内部变量设置为传参的值 \n * \n */\n\nfunction useState1(initialValue){\n    var _val = initialValue;//_val是useState创建的本地变量\n    function state(){\n        return _val; //使用了由外层函数定义的_val\n    }\n\n    function setState(newVal){\n        _val=newVal;\n    }\n\n    return [state,setState] //将函数暴露给外部使用\n}\n\nvar [foo ,setFoo] = useState(0);//数组结构\nconsole.log(foo())//打印0 - initialValue（初始值）\n\nsetFoo(1);//在useState作用域内设置_val的值\nconsole.log(foo()) // 打印 1 - 虽然调用同一个方法，但返回新的 initialValue\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}