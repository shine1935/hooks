{"ast":null,"code":"// /**\n//  *  state返回内部变量_val的值\n//  *  setState将该内部变量设置为传参的值 \n//  * \n//  */\n// function useState(initialValue){\n//     var _val = initialValue;//_val是useState创建的本地变量\n//     function state(){\n//         return _val; //使用了由外层函数定义的_val\n//     }\n//     function setState(newVal){\n//         _val=newVal;\n//     }\n//     return [state,setState] //将函数暴露给外部使用\n// }\n// var [foo ,setFoo] = useState(0);//数组结构\n// console.log(foo())//打印0 - initialValue（初始值）\n// setFoo(1);//在useState作用域内设置_val的值\n// console.log(foo()) // 打印 1 - 虽然调用同一个方法，但返回新的 initialValue","map":{"version":3,"sources":["/Users/lijiajia/private2021/hooks/src/basic/useStateOrigin.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA","sourcesContent":["// /**\n//  *  state返回内部变量_val的值\n//  *  setState将该内部变量设置为传参的值 \n//  * \n//  */\n\n// function useState(initialValue){\n//     var _val = initialValue;//_val是useState创建的本地变量\n//     function state(){\n//         return _val; //使用了由外层函数定义的_val\n//     }\n\n//     function setState(newVal){\n//         _val=newVal;\n//     }\n\n//     return [state,setState] //将函数暴露给外部使用\n// }\n\n// var [foo ,setFoo] = useState(0);//数组结构\n// console.log(foo())//打印0 - initialValue（初始值）\n\n// setFoo(1);//在useState作用域内设置_val的值\n// console.log(foo()) // 打印 1 - 虽然调用同一个方法，但返回新的 initialValue\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}