{"ast":null,"code":"var _jsxFileName = \"/Users/lijiajia/Desktop/hooks/hooks/src/basic/useContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useContext, useState } from 'react';\n/**\n * 回调函数是否能传？\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst themes = {\n  light: {\n    foreground: \"#000000\",\n    background: \"#eeeeee\"\n  },\n  dark: {\n    foreground: \"#ffffff\",\n    background: \"#222222\"\n  }\n};\nconst ThemeContext = /*#__PURE__*/React.createContext({\n  themes,\n  toggle: () => {}\n});\nexport default function AppContext() {\n  _s();\n\n  const [theme, setTheme] = useState(themes.light);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      theme,\n      toggle: () => {\n        setTheme(theme => {\n          console.log('theme', theme);\n          setTheme(theme === themes.light ? themes.dark : themes.light);\n        });\n      }\n    },\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppContext, \"5IR7NF08hS1O0qqS7UthgDFpkEo=\");\n\n_c = AppContext;\n\nfunction Toolbar(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(ThemedButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_c2 = Toolbar;\n\nfunction ThemedButton() {\n  _s2();\n\n  const theme = useContext(ThemeContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: theme.theme.background,\n      color: theme.theme.foreground\n    },\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        theme.toggle();\n      },\n      children: \"I am styled by theme context!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(ThemedButton, \"+C1P7ukOg/azcV4AZ819oyezFOE=\");\n\n_c3 = ThemedButton;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"AppContext\");\n$RefreshReg$(_c2, \"Toolbar\");\n$RefreshReg$(_c3, \"ThemedButton\");","map":{"version":3,"sources":["/Users/lijiajia/Desktop/hooks/hooks/src/basic/useContext.js"],"names":["React","useContext","useState","themes","light","foreground","background","dark","ThemeContext","createContext","toggle","AppContext","theme","setTheme","console","log","Toolbar","props","ThemedButton","color"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA;AACA;AACA;;;AACA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAE;AACHC,IAAAA,UAAU,EAAE,SADT;AAEHC,IAAAA,UAAU,EAAE;AAFT,GADI;AAKXC,EAAAA,IAAI,EAAE;AACFF,IAAAA,UAAU,EAAE,SADV;AAEFC,IAAAA,UAAU,EAAE;AAFV;AALK,CAAf;AAWA,MAAME,YAAY,gBAAGR,KAAK,CAACS,aAAN,CAAoB;AAAEN,EAAAA,MAAF;AAAUO,EAAAA,MAAM,EAAE,MAAM,CAAG;AAA3B,CAApB,CAArB;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACjC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACC,MAAM,CAACC,KAAR,CAAlC;AACA,sBACI,QAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAE;AAC1BQ,MAAAA,KAD0B;AAE1BF,MAAAA,MAAM,EAAE,MAAM;AACVG,QAAAA,QAAQ,CAACD,KAAK,IAAI;AACdE,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACAC,UAAAA,QAAQ,CAACD,KAAK,KAAKT,MAAM,CAACC,KAAjB,GAAyBD,MAAM,CAACI,IAAhC,GAAuCJ,MAAM,CAACC,KAA/C,CAAR;AACH,SAHO,CAAR;AAIH;AAPyB,KAA9B;AAAA,2BASI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH;;GAfuBO,U;;KAAAA,U;;AAiBxB,SAASK,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,sBACI;AAAA,2BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;MANQD,O;;AAQT,SAASE,YAAT,GAAwB;AAAA;;AACpB,QAAMN,KAAK,GAAGX,UAAU,CAACO,YAAD,CAAxB;AACA,sBACI;AAAK,IAAA,KAAK,EAAE;AAAEF,MAAAA,UAAU,EAAEM,KAAK,CAACA,KAAN,CAAYN,UAA1B;AAAsCa,MAAAA,KAAK,EAAEP,KAAK,CAACA,KAAN,CAAYP;AAAzD,KAAZ;AAAA,2BACI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEO,QAAAA,KAAK,CAACF,MAAN;AAAgB,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;IAVQQ,Y;;MAAAA,Y","sourcesContent":["import React, { useContext, useState } from 'react';\n/**\n * 回调函数是否能传？\n */\nconst themes = {\n    light: {\n        foreground: \"#000000\",\n        background: \"#eeeeee\"\n    },\n    dark: {\n        foreground: \"#ffffff\",\n        background: \"#222222\"\n    }\n};\n\nconst ThemeContext = React.createContext({ themes, toggle: () => { } });\n\nexport default function AppContext() {\n    const [theme, setTheme] = useState(themes.light);\n    return (\n        <ThemeContext.Provider value={{\n            theme,\n            toggle: () => {\n                setTheme(theme => {\n                    console.log('theme', theme)\n                    setTheme(theme === themes.light ? themes.dark : themes.light)\n                })\n            }\n        }}>\n            <Toolbar />\n        </ThemeContext.Provider>\n    );\n}\n\nfunction Toolbar(props) {\n    return (\n        <div>\n            <ThemedButton />\n        </div>\n    );\n}\n\nfunction ThemedButton() {\n    const theme = useContext(ThemeContext);\n    return (\n        <div style={{ background: theme.theme.background, color: theme.theme.foreground }} >\n            <button onClick={() => { theme.toggle() }}>\n                I am styled by theme context!\n            </button>\n        </div>\n\n    );\n}"]},"metadata":{},"sourceType":"module"}