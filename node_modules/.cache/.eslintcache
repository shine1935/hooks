[{"/Users/lijiajia/Desktop/hooks/hooks/src/index.js":"1","/Users/lijiajia/Desktop/hooks/hooks/src/App.js":"2","/Users/lijiajia/Desktop/hooks/hooks/src/reportWebVitals.js":"3","/Users/lijiajia/Desktop/hooks/hooks/src/basic/useState.js":"4","/Users/lijiajia/Desktop/hooks/hooks/src/basic/useEffect.js":"5","/Users/lijiajia/Desktop/hooks/hooks/src/basic/useContext.js":"6","/Users/lijiajia/Desktop/hooks/hooks/src/extra/useReducer.js":"7","/Users/lijiajia/Desktop/hooks/hooks/src/extra/useRef.js":"8","/Users/lijiajia/Desktop/hooks/hooks/src/extra/useMemo.js":"9","/Users/lijiajia/Desktop/hooks/hooks/src/extra/useCallback.js":"10","/Users/lijiajia/Desktop/hooks/hooks/src/extra/bugs.js":"11","/Users/lijiajia/Desktop/hooks/hooks/src/extra/customHooks.js":"12","/Users/lijiajia/Desktop/hooks/hooks/src/routerRender.jsx":"13","/Users/lijiajia/Desktop/hooks/hooks/src/router.js":"14"},{"size":606,"mtime":1619770609712,"results":"15","hashOfConfig":"16"},{"size":0,"mtime":1619753199688,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1619577540514,"results":"18","hashOfConfig":"16"},{"size":361,"mtime":1619768252029,"results":"19","hashOfConfig":"16"},{"size":1304,"mtime":1619768733169,"results":"20","hashOfConfig":"16"},{"size":1249,"mtime":1619769277471,"results":"21","hashOfConfig":"16"},{"size":1007,"mtime":1619751066161,"results":"22","hashOfConfig":"16"},{"size":1323,"mtime":1619707600066,"results":"23","hashOfConfig":"16"},{"size":899,"mtime":1619770784401,"results":"24","hashOfConfig":"16"},{"size":1106,"mtime":1619771279274,"results":"25","hashOfConfig":"16"},{"size":509,"mtime":1619707193643,"results":"26","hashOfConfig":"16"},{"size":1098,"mtime":1619751099705,"results":"27","hashOfConfig":"16"},{"size":1479,"mtime":1619752770564,"results":"28","hashOfConfig":"16"},{"size":1358,"mtime":1619770829702,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ri7thf",{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"37"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"37"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/lijiajia/Desktop/hooks/hooks/src/index.js",[],"/Users/lijiajia/Desktop/hooks/hooks/src/App.js",[],["64","65"],"/Users/lijiajia/Desktop/hooks/hooks/src/reportWebVitals.js",[],["66","67"],"/Users/lijiajia/Desktop/hooks/hooks/src/basic/useState.js",[],"/Users/lijiajia/Desktop/hooks/hooks/src/basic/useEffect.js",["68","69","70"],"import React, { useState, useEffect } from 'react';\n\nexport default function Effect() {\n  const [count, setCount] = useState(0);\n\n  //它在第一次渲染之后和每次更新之后都会执行\n  // Similar to componentDidMount and componentDidUpdate:\n  useEffect(() => {\n    // Update the document title using the browser API\n    document.title = `You clicked ${count} times`;\n  },[1,2]);\n\n  return (\n    <div>\n      <p>You clicked {count} times</p>\n      <button onClick={() => setCount(count + 1)}>\n        Click me\n      </button>\n    </div>\n  );\n}\n\n/**\n * 清除effect副作用\n */\n\n// import React, { useState, useEffect } from 'react';\n\n\n// function useInterval(callback, time) {\n//     useEffect(() => {\n//         const I = setInterval(callback, time);\n//         return () => {\n//             clearInterval()\n//         }\n//     }, [])//基本类型、引用类型、Map、Error？？？？？\n\n// }\n// export default function Effect() {\n//     const [count, setCount] = useState(0);\n\n//     useInterval(() => {\n//         setCount(count => count + 1);\n//     }, 1000)\n\n//     return (\n//         <div>\n//             <p>You clicked {count} times</p>\n//             <button onClick={() => setCount(count + 1)}>\n//                 Click me\n//       </button>\n//         </div>\n//     );\n// }\n\n\n","/Users/lijiajia/Desktop/hooks/hooks/src/basic/useContext.js",[],"/Users/lijiajia/Desktop/hooks/hooks/src/extra/useReducer.js",["71"],"/**\n * useState的替代方案。\n * 接收(state,action)=>newState 的reducer\n * 返回当前的state以及配套的dispatch方案\n * \n * \n * useReducer比usestate更实用的场景：\n * 1.state逻辑复杂且包含多个子值\n * 2.下一个state依赖于之前的state\n * \n * useReducer还能给触发深更新的组件做性能优化\n * 原理：传递的是dispatch而不是回调函数\n */\n\nimport React, { useReducer } from 'react'\nimport { Button } from 'antd'\n\nfunction reducer(state, action) {\n    console.log(state, action)\n    switch(action.type){\n        case \"add\":\n            return state+1;\n        case \"sub\":\n            return state-1;\n        default:\n            throw '...'\n    }\n}\nexport default function Counter() {\n    const [counter, dispatch] = useReducer(reducer, 0)\n    return <div>\n        Your counter is :{counter}\n        <Button onClick={() => { dispatch({ type: 'add' }) }}>+</Button>\n        <Button onClick={() => { dispatch({ type: 'sub' }) }}>-</Button>\n    </div>\n}","/Users/lijiajia/Desktop/hooks/hooks/src/extra/useRef.js",[],"/Users/lijiajia/Desktop/hooks/hooks/src/extra/useMemo.js",["72"],"/**\n * 缓存界面上常用，但是不常改变的东西\n * V=f(state,props) useHooks...\n * 想在f中new Object();只创建一次\n * 一些复杂计算在状态改变后才做\n */\n\n/**\n * 缓存一个函数(useCallback)\n * 缓存一个值(useMemo)\n */\n\n\n//深拷贝和浅拷贝(缓存策略？？？)\n//tips:可以使用useMemo减少重绘次数\nimport React, { useMemo, useState } from 'react'\n\nexport default function useMemoExample() {\n\n    const [count, setCount] = useState(0);\n    const memorizedText = useMemo(() => {\n        return `第一次进入组件的时间为:${Date.now()}`\n    }, [Math.floor(count/10)]);//每增加10，变化一次\n\n    return (\n        <div>\n            {memorizedText}\n            <p>点击了：{count}次</p>\n            <button onClick={() => {setCount(count => count + 1) }}>点我增加</button>\n        </div>\n    )\n\n}\n\n\n// useMemo(()=>{\n    \n// })\n\n\n\n\n","/Users/lijiajia/Desktop/hooks/hooks/src/extra/useCallback.js",["73","74"],"/Users/lijiajia/Desktop/hooks/hooks/src/extra/bugs.js",[],"/Users/lijiajia/Desktop/hooks/hooks/src/extra/customHooks.js",["75"],"/**\n * 自定义hook\n */\n\nimport React, { useState, useEffect } from 'react'\n\nfunction sleep() {\n    return new Promise((resolve) => {\n        setTimeout(() => {\n            resolve()\n        }, 200)\n    })\n\n}\n\n//请求后返回了一些数据，请求返回的数据是状态\nasync function getPerson() {\n    await sleep(200);//模拟接口请求，在这里停留200毫秒\n    return ['小明', '小红', '小小']//之后返回一个数组\n}\n\n//然后使用状态\nfunction usePerson() {\n    const [list, setList] = useState(null);\n    //发送请求是个作用，也就是effect(因为没有办法体现在界面上，所以理解为一个作用)\n    async function request() {\n        const listResponse = await getPerson()\n        setList(listResponse)//list 不要依赖现有的list????\n    }\n    useEffect(request, []);\n    return list\n}\n\n\n\nexport const CustomHooks = () => {\n    const list = usePerson();\n\n    if (list === null) {\n        return <div>loading...</div>\n    }\n    return <div>{\n        list.map((name, i) => {\n            return <li key={i}>{name}</li>\n        })}</div>\n\n}\n","/Users/lijiajia/Desktop/hooks/hooks/src/routerRender.jsx",[],"/Users/lijiajia/Desktop/hooks/hooks/src/router.js",["76"],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"77","replacedBy":"81"},{"ruleId":"79","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":11,"column":5,"nodeType":"85","endLine":11,"endColumn":10,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":11,"column":6,"nodeType":"88","endLine":11,"endColumn":7},{"ruleId":"83","severity":1,"message":"89","line":11,"column":8,"nodeType":"88","endLine":11,"endColumn":9},{"ruleId":"90","severity":1,"message":"91","line":26,"column":13,"nodeType":"92","messageId":"93","endLine":26,"endColumn":24},{"ruleId":"83","severity":1,"message":"94","line":23,"column":9,"nodeType":"95","endLine":23,"endColumn":29},{"ruleId":"96","severity":1,"message":"97","line":1,"column":27,"nodeType":"98","messageId":"99","endLine":1,"endColumn":33},{"ruleId":"96","severity":1,"message":"100","line":1,"column":35,"nodeType":"98","messageId":"99","endLine":1,"endColumn":46},{"ruleId":"83","severity":1,"message":"101","line":26,"column":5,"nodeType":"102","endLine":29,"endColumn":6},{"ruleId":"96","severity":1,"message":"103","line":1,"column":8,"nodeType":"98","messageId":"99","endLine":1,"endColumn":13},"no-native-reassign",["104"],"no-negated-in-lhs",["105"],["104"],["105"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array.","ArrayExpression",["106"],"The 1 literal is not a valid dependency because it never changes. You can safely remove it.","Literal","The 2 literal is not a valid dependency because it never changes. You can safely remove it.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","React Hook useMemo has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useCallback' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","FunctionDeclaration","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},"Update the dependencies array to be: [count]",{"range":"109","text":"110"},[343,348],"[count]"]