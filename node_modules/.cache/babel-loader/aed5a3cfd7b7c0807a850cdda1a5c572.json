{"ast":null,"code":"var _jsxFileName = \"/Users/lijiajia/Desktop/hooks/hooks/src/extra/useMemo.js\",\n    _s = $RefreshSig$();\n\n/**\n * 缓存界面上常用，但是不常改变的东西\n * V=f(state,props) useHooks...\n * 想在f中new Object();只创建一次\n * 一些复杂计算在状态改变后才做\n */\n\n/**\n * 缓存一个函数(useCallback)\n * 缓存一个值(useMemo)\n */\nimport React, { useMemo, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function useMemoExample() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const memorizedText = useMemo(() => {\n    return `第一次进入组件的时间为:${Date.noe()}`;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [memorizedText, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u70B9\\u51FB\\u4E86\\uFF1A\", count, \"\\u6B21\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        () => setCount(count => count + 1);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_s(useMemoExample, \"3ZOEWkwglTtE6qnRlFiUBt3Oo7Q=\");","map":{"version":3,"sources":["/Users/lijiajia/Desktop/hooks/hooks/src/extra/useMemo.js"],"names":["React","useMemo","useState","useMemoExample","count","setCount","memorizedText","Date","noe"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAErC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAMI,aAAa,GAAGL,OAAO,CAAC,MAAM;AAChC,WAAQ,eAAcM,IAAI,CAACC,GAAL,EAAW,EAAjC;AACH,GAF4B,EAE1B,EAF0B,CAA7B;AAIA,sBACI;AAAA,eACKF,aADL,eAEI;AAAA,6CAAQF,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAE,cAAMC,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAd;AAAoC;AAA7D;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GAfuBD,c","sourcesContent":["/**\n * 缓存界面上常用，但是不常改变的东西\n * V=f(state,props) useHooks...\n * 想在f中new Object();只创建一次\n * 一些复杂计算在状态改变后才做\n */\n\n/**\n * 缓存一个函数(useCallback)\n * 缓存一个值(useMemo)\n */\n\nimport React, { useMemo, useState } from 'react'\n\nexport default function useMemoExample() {\n\n    const [count, setCount] = useState(0);\n    const memorizedText = useMemo(() => {\n        return `第一次进入组件的时间为:${Date.noe()}`\n    }, [])\n\n    return (\n        <div>\n            {memorizedText}\n            <p>点击了：{count}次</p>\n            <button onClick={() => { () => setCount(count => count + 1) }}></button>\n        </div>\n    )\n\n}\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}