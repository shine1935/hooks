{"ast":null,"code":"/**\n* state返回内部变量_val的值\n* setState将该内部变量设置为传参的值\n*\n*/\nfunction useState(initialValue) {\n  var _val = initialValue; //_val是useState创建的本地变量\n\n  function state() {\n    return _val; //使用了由外层函数定义的_val\n  }\n\n  function setState(newVal) {\n    _val = newVal;\n  }\n\n  return [state, setState]; //将函数暴露给外部使用\n}\n\nvar [foo, setFoo] = useState(0); //数组结构\n\nconsole.log(foo()); //打印0 - initialValue（初始值）\n\nsetFoo(1); //在useState作用域内设置_val的值\n\nconsole.log(foo()); // 打印 1 - 虽然调用同一个方法，但返回新的 initialValue","map":{"version":3,"sources":["/Users/lijiajia/private2021/hooks/src/basic/useStateOrigin.js"],"names":["useState","initialValue","_val","state","setState","newVal","foo","setFoo","console","log"],"mappings":"AACI;AACJ;AACA;AACA;AACA;AAEI,SAASA,QAAT,CAAkBC,YAAlB,EAAgC;AAC5B,MAAIC,IAAI,GAAGD,YAAX,CAD4B,CACJ;;AACxB,WAASE,KAAT,GAAiB;AACb,WAAOD,IAAP,CADa,CACA;AAChB;;AAED,WAASE,QAAT,CAAkBC,MAAlB,EAA0B;AACtBH,IAAAA,IAAI,GAAGG,MAAP;AACH;;AAED,SAAO,CAACF,KAAD,EAAQC,QAAR,CAAP,CAV4B,CAUH;AAC5B;;AAED,IAAI,CAACE,GAAD,EAAMC,MAAN,IAAgBP,QAAQ,CAAC,CAAD,CAA5B,C,CAAgC;;AAChCQ,OAAO,CAACC,GAAR,CAAYH,GAAG,EAAf,E,CAAkB;;AAElBC,MAAM,CAAC,CAAD,CAAN,C,CAAU;;AACVC,OAAO,CAACC,GAAR,CAAYH,GAAG,EAAf,E,CAAmB","sourcesContent":["\n    /**\n    * state返回内部变量_val的值\n    * setState将该内部变量设置为传参的值\n    *\n    */\n\n    function useState(initialValue) {\n        var _val = initialValue;//_val是useState创建的本地变量\n        function state() {\n            return _val; //使用了由外层函数定义的_val\n        }\n\n        function setState(newVal) {\n            _val = newVal;\n        }\n\n        return [state, setState] //将函数暴露给外部使用\n    }\n\n    var [foo, setFoo] = useState(0);//数组结构\n    console.log(foo())//打印0 - initialValue（初始值）\n\n    setFoo(1);//在useState作用域内设置_val的值\n    console.log(foo()) // 打印 1 - 虽然调用同一个方法，但返回新的 initialValue\n"]},"metadata":{},"sourceType":"module"}