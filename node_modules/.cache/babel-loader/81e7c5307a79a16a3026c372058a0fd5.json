{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// export default function Effect() {\n//   const [count, setCount] = useState(0);\n//   //它在第一次渲染之后和每次更新之后都会执行\n//   // Similar to componentDidMount and componentDidUpdate:\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     document.title = `You clicked ${count} times`;\n//   });\n//   return (\n//     <div>\n//       <p>You clicked {count} times</p>\n//       <button onClick={() => setCount(count + 1)}>\n//         Click me\n//       </button>\n//     </div>\n//   );\n// }\n// import React, { useState, useEffect } from 'react';\n// export default function FriendStatus(props) {\n//   const [isOnline, setIsOnline] = useState(null);\n//   useEffect(() => {\n//     function handleStatusChange(status) {\n//       setIsOnline(status.isOnline);\n//     }\n//     ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n//     // Specify how to clean up after this effect:\n//     return function cleanup() {\n//       ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n//     };\n//   });\n//   if (isOnline === null) {\n//     return 'Loading...';\n//   }\n//   return isOnline ? 'Online' : 'Offline';\n// }","map":{"version":3,"sources":["/Users/lijiajia/Desktop/hooks/hooks/src/basic/useEffect.js"],"names":[],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// export default function Effect() {\n//   const [count, setCount] = useState(0);\n  \n//   //它在第一次渲染之后和每次更新之后都会执行\n//   // Similar to componentDidMount and componentDidUpdate:\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     document.title = `You clicked ${count} times`;\n//   });\n\n//   return (\n//     <div>\n//       <p>You clicked {count} times</p>\n//       <button onClick={() => setCount(count + 1)}>\n//         Click me\n//       </button>\n//     </div>\n//   );\n// }\n\n\n// import React, { useState, useEffect } from 'react';\n\n// export default function FriendStatus(props) {\n//   const [isOnline, setIsOnline] = useState(null);\n\n//   useEffect(() => {\n//     function handleStatusChange(status) {\n//       setIsOnline(status.isOnline);\n//     }\n//     ChatAPI.subscribeToFriendStatus(props.friend.id, handleStatusChange);\n//     // Specify how to clean up after this effect:\n//     return function cleanup() {\n//       ChatAPI.unsubscribeFromFriendStatus(props.friend.id, handleStatusChange);\n//     };\n//   });\n\n//   if (isOnline === null) {\n//     return 'Loading...';\n//   }\n//   return isOnline ? 'Online' : 'Offline';\n// }"]},"metadata":{},"sourceType":"module"}