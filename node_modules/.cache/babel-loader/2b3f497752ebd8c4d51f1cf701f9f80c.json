{"ast":null,"code":"var _jsxFileName = \"/Users/lijiajia/Desktop/hooks/hooks/src/basic/useEffect.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\n// import React, { useState, useEffect } from 'react';\n// export default function Effect() {\n//   const [count, setCount] = useState(0);\n//   //它在第一次渲染之后和每次更新之后都会执行\n//   // Similar to componentDidMount and componentDidUpdate:\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     document.title = `You clicked ${count} times`;\n//   },[1,2]);\n//   return (\n//     <div>\n//       <p>You clicked {count} times</p>\n//       <button onClick={() => setCount(count + 1)}>\n//         Click me\n//       </button>\n//     </div>\n//   );\n// }\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useInterval(callback, time) {\n  _s();\n\n  useEffect(() => {\n    const I = setInterval(callback, time);\n    return () => {\n      clearInterval();\n    };\n  }, []);\n}\n\n_s(useInterval, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\nexport default function Effect() {\n  _s2();\n\n  const [count, setCount] = useState(0);\n  useInterval(() => {\n    console.log(count);\n    setCount(count => count + 1);\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"You clicked \", count, \" times\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setCount(count + 1),\n      children: \"Click me\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Effect, \"zrDdkivn0tVnlFDIqW9dLN6ZHjw=\", false, function () {\n  return [useInterval];\n});\n\n_c = Effect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Effect\");","map":{"version":3,"sources":["/Users/lijiajia/Desktop/hooks/hooks/src/basic/useEffect.js"],"names":["React","useState","useEffect","useInterval","callback","time","I","setInterval","clearInterval","Effect","count","setCount","console","log"],"mappings":";;;;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAGA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,IAA/B,EAAqC;AAAA;;AACjCH,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMI,CAAC,GAAGC,WAAW,CAACH,QAAD,EAAWC,IAAX,CAArB;AACA,WAAO,MAAM;AACTG,MAAAA,aAAa;AAChB,KAFD;AAGH,GALQ,EAKN,EALM,CAAT;AAOH;;GARQL,W;;AAST,eAAe,SAASM,MAAT,GAAkB;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,CAAC,CAAD,CAAlC;AAEAE,EAAAA,WAAW,CAAC,MAAM;AACdS,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAC,IAAAA,QAAQ,CAACD,KAAK,IAAIA,KAAK,GAAG,CAAlB,CAAR;AACH,GAHU,EAGR,IAHQ,CAAX;AAKA,sBACI;AAAA,4BACI;AAAA,iCAAgBA,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,OAAO,EAAE,MAAMC,QAAQ,CAACD,KAAK,GAAG,CAAT,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;IAhBuBD,M;UAGpBN,W;;;KAHoBM,M","sourcesContent":["// import React, { useState, useEffect } from 'react';\n\n// export default function Effect() {\n//   const [count, setCount] = useState(0);\n\n//   //它在第一次渲染之后和每次更新之后都会执行\n//   // Similar to componentDidMount and componentDidUpdate:\n//   useEffect(() => {\n//     // Update the document title using the browser API\n//     document.title = `You clicked ${count} times`;\n//   },[1,2]);\n\n//   return (\n//     <div>\n//       <p>You clicked {count} times</p>\n//       <button onClick={() => setCount(count + 1)}>\n//         Click me\n//       </button>\n//     </div>\n//   );\n// }\n\n\nimport React, { useState, useEffect } from 'react';\n\n\nfunction useInterval(callback, time) {\n    useEffect(() => {\n        const I = setInterval(callback, time);\n        return () => {\n            clearInterval()\n        }\n    }, [])\n\n}\nexport default function Effect() {\n    const [count, setCount] = useState(0);\n\n    useInterval(() => {\n        console.log(count)\n        setCount(count => count + 1);\n    }, 1000)\n\n    return (\n        <div>\n            <p>You clicked {count} times</p>\n            <button onClick={() => setCount(count + 1)}>\n                Click me\n      </button>\n        </div>\n    );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}