{"ast":null,"code":"var _jsxFileName = \"/Users/lijiajia/private2021/hooks/src/extra/origin/useMemoOrigin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, memo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet lastMemo;\nlet lastMemoDependencies;\n\nfunction useMemo(callback, dependencies) {\n  if (lastMemoDependencies) {\n    let changed = !dependencies.every((item, index) => {\n      return item === lastMemoDependencies[index];\n    });\n\n    if (changed) {\n      lastMemo = callback();\n      lastMemoDependencies = dependencies;\n    }\n  } else {\n    // 没有传入依赖项\n    lastMemo = callback();\n    lastMemoDependencies = dependencies;\n  }\n\n  return lastMemo;\n}\n\nfunction Child({\n  data\n}) {\n  console.log(\"天啊，我怎么被渲染啦，我并不希望啊\", data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"child\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Child;\nChild = /*#__PURE__*/memo(Child); // 查memo的api和用法\n\nexport default function App() {\n  _s();\n\n  const [count, setCount] = useState(0);\n  const [number, setNumber] = useState(20);\n  let data = useMemo(() => ({\n    number\n  }), [number]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Child, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        setCount(count + 1);\n      },\n      children: \"\\u589E\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"e+M4Y2avreMaNPWTcPa86iwkmNY=\");\n\n_c2 = App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Child\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"sources":["/Users/lijiajia/private2021/hooks/src/extra/origin/useMemoOrigin.js"],"names":["React","useState","memo","lastMemo","lastMemoDependencies","useMemo","callback","dependencies","changed","every","item","index","Child","data","console","log","App","count","setCount","number","setNumber"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,IAAxB,QAAmC,OAAnC;;AAEA,IAAIC,QAAJ;AACA,IAAIC,oBAAJ;;AACA,SAASC,OAAT,CAAiBC,QAAjB,EAA0BC,YAA1B,EAAuC;AACnC,MAAGH,oBAAH,EAAwB;AACpB,QAAII,OAAO,GAAG,CAACD,YAAY,CAACE,KAAb,CAAmB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC5C,aAAOD,IAAI,KAAKN,oBAAoB,CAACO,KAAD,CAApC;AACH,KAFc,CAAf;;AAGA,QAAGH,OAAH,EAAW;AACPL,MAAAA,QAAQ,GAAGG,QAAQ,EAAnB;AACAF,MAAAA,oBAAoB,GAAGG,YAAvB;AACH;AACJ,GARD,MAQK;AAAE;AACHJ,IAAAA,QAAQ,GAAGG,QAAQ,EAAnB;AACAF,IAAAA,oBAAoB,GAAGG,YAAvB;AACH;;AACD,SAAOJ,QAAP;AACH;;AACD,SAASS,KAAT,CAAe;AAACC,EAAAA;AAAD,CAAf,EAAuB;AACnBC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCF,IAAhC;AACA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;KALQD,K;AAOTA,KAAK,gBAAGV,IAAI,CAACU,KAAD,CAAZ,C,CAAmB;;AAEnB,eAAe,SAASI,GAAT,GAAc;AAAA;;AACzB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACkB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,EAAD,CAApC;AACA,MAAIY,IAAI,GAAGR,OAAO,CAAC,OAAM;AAACc,IAAAA;AAAD,GAAN,CAAD,EAAiB,CAACA,MAAD,CAAjB,CAAlB;AACA,sBACI;AAAA,4BAEI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEN;AAAb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAQ,MAAA,OAAO,EAAE,MAAM;AAAEK,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AAAoB,OAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GAbuBD,G;;MAAAA,G","sourcesContent":["import React ,{useState,memo,}from 'react';\n\nlet lastMemo\nlet lastMemoDependencies\nfunction useMemo(callback,dependencies){\n    if(lastMemoDependencies){\n        let changed = !dependencies.every((item,index)=>{\n            return item === lastMemoDependencies[index]\n        })\n        if(changed){\n            lastMemo = callback()\n            lastMemoDependencies = dependencies\n        }\n    }else{ // 没有传入依赖项\n        lastMemo = callback()\n        lastMemoDependencies = dependencies\n    }\n    return lastMemo\n}\nfunction Child({data}) {\n    console.log(\"天啊，我怎么被渲染啦，我并不希望啊\",data)\n    return (\n        <div>child</div>\n    )\n}\n\nChild = memo(Child)// 查memo的api和用法\n\nexport default function App(){\n    const [count, setCount] = useState(0);\n    const [number, setNumber] = useState(20)\n    let data = useMemo(()=> ({number}),[number])\n    return (\n        <div>\n            \n            <Child data={data}></Child>\n            <button onClick={() => { setCount(count + 1)}}>\n                增加\n            </button>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}